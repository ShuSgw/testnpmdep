{"version":3,"file":"component---src-pages-index-js-23ffbea1b91cd0d13c80.js","mappings":"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","sources":["webpack://sgw_studio/./src/components/timeline/TimelineItem.js","webpack://sgw_studio/./node_modules/uuid/dist/esm-browser/native.js","webpack://sgw_studio/./node_modules/uuid/dist/esm-browser/rng.js","webpack://sgw_studio/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://sgw_studio/./node_modules/uuid/dist/esm-browser/v4.js","webpack://sgw_studio/./src/components/timeline/Timeline.js","webpack://sgw_studio/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\n\nconst TimelineItem = (props) => {\n  const values = props.timelineItemVals;\n\n  const linkTitle = (\n    <a\n      href={values.website}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"dark:text-white hover:underline\"\n    >\n      {values.name}\n    </a>\n  );\n\n  const txtTitle = <span className=\"dark:text-white\">{values.name}</span>;\n\n  return (\n    <li className=\"list-none\">\n      <span className=\"absolute flex items-center justify-center w-6 h-6 bg-blue-200 rounded-full -left-0 ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900\">\n        <svg\n          aria-hidden=\"true\"\n          className=\"w-3 h-3 text-blue-600 dark:text-blue-400\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"></path>\n        </svg>\n      </span>\n      <h3 className=\"mb-1 text-lg font-semibold text-gray-900\">\n        {values.website ? linkTitle : txtTitle}\n      </h3>\n      <time className=\"block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500\">\n        {values.period}\n      </time>\n      <p className=\"text-base font-normal text-gray-500 dark:text-gray-400\">\n        {values.duties}\n      </p>\n      {/* <a\n        href=\"#\"\n        className=\"inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-200 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700\"\n      >\n        <svg\n          className=\"w-4 h-4 mr-2\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            d=\"M6 2a2 2 0 00-2 2v12a2 2 0 002 2h8a2 2 0 002-2V7.414A2 2 0 0015.414 6L12 2.586A2 2 0 0010.586 2H6zm5 6a1 1 0 10-2 0v3.586l-1.293-1.293a1 1 0 10-1.414 1.414l3 3a1 1 0 001.414 0l3-3a1 1 0 00-1.414-1.414L11 11.586V8z\"\n            clip-rule=\"evenodd\"\n          ></path>\n        </svg>\n        Download ZIP\n      </a> */}\n    </li>\n  );\n};\n\nexport default TimelineItem;\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import React from \"react\";\n//\nimport {Section, Animation} from \"gatsby-theme-portfolio-minimal\";\n\nimport {useStaticQuery, graphql} from \"gatsby\";\nimport TimelineItem from \"./TimelineItem\";\nimport {v4 as uuidv4} from \"uuid\";\n\nconst Timeline = () => {\n  const data = useStaticQuery(\n    graphql`\n      query timelineListQuery {\n        allTimelineJson {\n          nodes {\n            timeline {\n              name\n              website\n              duties\n              period\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const listOfTimelines = data.allTimelineJson.nodes[0].timeline;\n\n  const timelineItem = listOfTimelines.map((eachTimeline) => (\n    <TimelineItem key={uuidv4()} timelineItemVals={eachTimeline} />\n  ));\n\n  return (\n    <Animation type=\"fadeUp\">\n      <Section anchor=\"timeline\" heading=\"Timeline\">\n        <ul className=\"relative\">\n          <div>{timelineItem}</div>\n        </ul>\n      </Section>\n    </Animation>\n  );\n};\n\nexport default Timeline;\n","import React from \"react\";\nimport {\n  AboutSection,\n  // ArticlesSection,\n  // ContactSection,\n  HeroSection,\n  InterestsSection,\n  Page,\n  // ProjectsSection,\n  Seo,\n} from \"gatsby-theme-portfolio-minimal\";\n\nimport \"../styles/global.css\";\n\nimport Timeline from \"../components/timeline/Timeline\";\n\nimport {graphql} from \"gatsby\";\n\nconst IndexPage = () => {\n  return (\n    <>\n      <Seo title=\"sgw studio\" />\n      <Page>\n        <HeroSection sectionId=\"hero\"></HeroSection>\n        <AboutSection sectionId=\"about\" heading=\"About me\" />\n        <InterestsSection sectionId=\"myskills\" heading=\"My skills\" />\n        <Timeline />\n      </Page>\n      {/*\n      <Page useSplashScreenAnimation>\n        <HeroSection sectionId=\"hero\" />\n        <ArticlesSection\n          sectionId=\"articles\"\n          heading=\"Latest Articles\"\n          sources={[\"Medium\"]}\n        />\n        <AboutSection sectionId=\"about\" heading=\"About me\" />\n        <InterestsSection sectionId=\"myskills\" heading=\"My skills\" />\n        <ProjectsSection sectionId=\"features\" heading=\"Built-in Features\" />\n        <ContactSection sectionId=\"github\" heading=\"Issues?\" />\n      </Page> */}\n    </>\n  );\n};\n\nexport const indexLang = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["props","values","timelineItemVals","linkTitle","React","href","website","target","rel","className","name","txtTitle","fill","viewBox","xmlns","d","period","duties","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","options","buf","rnds","random","Timeline","timelineItem","useStaticQuery","allTimelineJson","nodes","timeline","map","eachTimeline","TimelineItem","key","uuidv4","Animation","type","Section","anchor","heading","IndexPage","Seo","title","Page","HeroSection","sectionId","AboutSection","InterestsSection"],"sourceRoot":""}